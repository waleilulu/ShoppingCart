@model Project0220.myModels.Customer


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="logintitle">重設密碼</h2><br />
            <form id="forgetPasswordForm" asp-action="ForgetPassword" method="post">

                <div class="form-group">
                    <label class="control-label" name="username" >請輸入使用者帳號</label>
                    <input type="text" class="form-control" name="username" id="username"/>
                </div>

                <div class="form-group">
                    <label class="control-label" name="email">請輸入電子郵件</label>
                    <input type="email" class="form-control" name="email" id="email"/>
                </div>
                <div class="form-group">
                    <a asp-controller="Customers" asp-action="ForgetPassword"></a>
                    <input type="submit" id="getCodeBtn" name="GetCode" value="取得驗證碼" style="background-color:aliceblue;font-weight:bold;">
                    <span id="countdown"></span>
                </div>
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-success" role="alert">
                    @TempData["Message"]
                    </div>
                }

            </form>
            <form method="post" action="/Customers/EnterVerificationCode">
                <div class="form-group">
                    <label for="verificationCode" class="control-label">請輸入驗證碼 (不區分大小寫)</label>
                    <input type="text"  name="verificationCode" class="form-control" />
                </div>

                <input type="submit" value="送出驗證碼" style="background-color:aliceblue;font-weight:bold;">
                @if (TempData.ContainsKey("ErrorMessage"))
                {
                    <div class="alert alert-danger" role="alert">
                    @TempData["ErrorMessage"]
                    </div>
                }
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
    var countdownElement = document.getElementById("countdown");
    var countdownExpiration = localStorage.getItem("countdownExpiration");

    if (countdownExpiration) {
        var expirationTime = new Date(countdownExpiration).getTime();
        var now = new Date().getTime();
        var distance = expirationTime - now;

        if (distance > 0) {
            startCountdown(distance, countdownElement);
            countdownElement.classList.add("countdown-red"); // 添加 CSS 类
        } else {
            // 如果倒计时已结束，清除存储的过期时间
            localStorage.removeItem("countdownExpiration");
        }
    }
});

document.getElementById("forgetPasswordForm").addEventListener("submit", function(event) {
    // 防止表单提交
    event.preventDefault();

    // 检查是否填写了帐号和电子邮件
    var username = document.getElementById("username").value;
    var email = document.getElementById("email").value;
    if (!username || !email) {
        alert("请填写帐号和信箱");
        return;
    }

    // 发送表单数据到服务器
    var formData = new FormData(this);
    fetch(this.action, {
        method: this.method,
        body: formData
    })
    .then(response => {
        // 请求成功后显示倒计时器
        if (response.ok) {
            var countdownElement = document.getElementById("countdown");
            countdownElement.classList.add("countdown-red"); // 添加 CSS 类

            // 设置倒计时器
            var countDownDate = new Date().getTime() + (1 * 60 * 1000); // 获取现在时间并加上1分钟
            localStorage.setItem("countdownExpiration", new Date(countDownDate)); // 保存倒计时结束时间到本地存储
            startCountdown(1 * 60 * 1000, countdownElement); // 以1分钟的间隔启动倒计时器
        }
    });
});

function startCountdown(distance, element) {
    var countdownInterval = setInterval(function() {
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        element.textContent = "已成功發送驗證碼到該信箱，驗證碼將在 " + minutes + " 分 " + seconds + " 秒後失效";

        if (distance <= 0) {
            clearInterval(countdownInterval);
            element.classList.remove("countdown-red"); // 在失效时移除红色类
            element.textContent = "驗證碼已失效"; // 更新文本内容以显示验证码失效信息
        }

        distance -= 1000;
    }, 1000); // 1000 代表 setInterval 的第二个参数（以 1000 毫秒为间隔 = 1 秒）
}


</script>
